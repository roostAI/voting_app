// Test generated by RoostGPT for test zb-js-test using AI Type Open AI and AI Model gpt-4

import React from 'react';
import { shallow } from 'enzyme';
import Home from './Home';

describe('Home Component', () => {
  let wrapper;
  beforeEach(() => {
    wrapper = shallow(<Home />);
  });

  test('renders without crashing', () => {
    expect(wrapper.exists()).toBe(true);
  });

  test('renders candidates', () => {
    wrapper.setState({ candidates: [{ Name: 'docker', ImageUrl: 'docker.png' }] });
    expect(wrapper.find('.cardContent').text()).toEqual('docker');
  });

  test('renders no candidates', () => {
    wrapper.setState({ candidates: [] });
    expect(wrapper.find('.cardContent').exists()).toBe(false);
  });

  test('renders show results button', () => {
    wrapper.setState({ showResultsButton: true });
    expect(wrapper.find('.showResultsButton').exists()).toBe(true);
  });

  test('does not render show results button', () => {
    wrapper.setState({ showResultsButton: false });
    expect(wrapper.find('.showResultsButton').exists()).toBe(false);
  });

  test('renders notification', () => {
    wrapper.setState({ showNotification: true, candidate_id: 'docker' });
    expect(wrapper.find('.notificationContent').text()).toEqual('Vote registered for docker');
  });

  test('does not render notification', () => {
    wrapper.setState({ showNotification: false });
    expect(wrapper.find('.notificationPopup').exists()).toBe(false);
  });
});
