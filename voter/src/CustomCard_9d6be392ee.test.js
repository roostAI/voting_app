// Test generated by RoostGPT for test zb-js-test using AI Type Open AI and AI Model gpt-4

import React from 'react';
import { shallow } from 'enzyme';
import CustomCard from './Result';

describe('CustomCard', () => {
  let wrapper;
  let candidate = { candidate_id: 'docker', vote_count: 50 };
  let total_votes = 100;

  beforeEach(() => {
    wrapper = shallow(<CustomCard candidate={candidate} total_votes={total_votes} />);
  });

  test('renders the card correctly', () => {
    expect(wrapper.find('.card')).toHaveLength(1);
  });

  test('renders the correct candidate id', () => {
    expect(wrapper.find('.cardContent').text()).toContain(candidate.candidate_id);
  });

  test('calculates the correct vote percentage', () => {
    const votePercentage = Math.round((candidate.vote_count / total_votes) * 100);
    expect(wrapper.find('.progressbar_front').prop('style')).toHaveProperty('width', `${votePercentage}%`);
    expect(wrapper.find('.progressbar_back div').text()).toBe(`${votePercentage}%`);
  });

  test('renders the correct image for the candidate', () => {
    expect(wrapper.find('.cardBackgroundImage img').prop('src')).toBe(docker);
  });

  test('does not render an image if the candidate id does not match', () => {
    wrapper.setProps({ candidate: { candidate_id: 'unknown', vote_count: 50 } });
    expect(wrapper.find('.cardBackgroundImage img')).toHaveLength(0);
  });
});
